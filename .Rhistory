install.packages("devtools")
install.packages("roxygen")
install.packages("roxygen2")
library(devtools)
library(roxygen2)
devtools::create("BLS")
library(devtools)
library(roxygen2)
devtools::create("BLS")
?data.table
version
packageVersion("data.table")
install.packages("httr")
library(httr)
#' BLS data object
#'
#' This object contains feature of the BLS API to be used by functions.
#'
BLS <- list()
BLS$url <- "https://api.bls.gov/publicAPI/v2/timeseries/data/"
devtools::use_data(BLS)
use_data(BLS)
BLS <- list()
BLS$url <- "https://api.bls.gov/publicAPI/v2/timeseries/data/"
install.packages("usethis")
usethis::use_data_raw(name = "BLS")
library(BLS)
library("BLS")
library("BLS", )
getwd()
library("BLS", lib.loc = getwd())
devtools::create("bls4R")
getwd()
sedwd("/Users/issaachansen/Documents/Projects/")
setwd("/Users/issaachansen/Documents/Projects/")
devtools::create("bls4R")
devtools::load_all(path = '/Users/issaachansen/Documents/Projects/bls4R')
warnings()
devtools::load_all(path = '/Users/issaachansen/Documents/Projects/bls4R')
data("BLS")
devtools::build()
getwd()
setwd("~/Documents/Projects/bls4R")
getwd()
devtools::build()
devtools::document()
devtools::build()
devtools::install()
devtools::load_all()
?bls_request
data("BLS")
devtools::document()
devtools::build()
devtools::install()
devtools::load_all()
devtools::document()
# Initialize object to store data
BLS <- list()
# Add BLS API root URL
BLS$url <- "https://api.bls.gov/publicAPI/v2/timeseries/data/"
# Create package data object
usethis::use_data(BLS, overwrite = TRUE)
save(BLS)
save(BLS, file = "data-raw")
getwd()
save(BLS, file = "/data-raw/BLS.rda")
save(BLS, file = "~/data-raw/BLS.rda")
getwd()
save(BLS, file = "/Users/issaachansen/Documents/Projects/bls4R/data-raw/BLS.rda")
# Initialize object to store data
BLS <- list()
# Add BLS API root URL
BLS$url <- "https://api.bls.gov/publicAPI/v2/timeseries/data/"
# Create package data object
usethis::use_data(BLS, overwrite = TRUE)
devtools::document()
devtools::build()
devtools::document()
roxygen2::roxygenize()
devtools::load_all()
query <- bls_query(series = BLS$cpi, start_year=2014,end_year=2023)
request <- bls_request(query)
# Get number of rows in the data element
n <- base::length(request)
# Loop through all rows in the data object and unpack the values
data <- base::sequence(n) |>
base::lapply(function(i) bls_unpacker(request[[i]]))
# Format the data as a data.table
data <- data |> data.table::rbindlist()
data.table::setnames(data, new = c("year", "month", "index"))
View(data)
series <- c(BLS$cpi)
# Build API queries
queries <- series |>
base::lapply(function(x) bls_query(series=x, start_year=start_year, end_year=end_year, url=url))
start_year <- 2014
end_year <- 2023
# Build API queries
queries <- series |>
base::lapply(function(x) bls_query(series=x, start_year=start_year, end_year=end_year, url=url))
queries <- series |>
base::lapply(function(x) bls_query(series=x, start_year=start_year, end_year=end_year, url=url))
devtools::load_all()
bls_query()
devtools::build()
devtools::load_all()
# Build API queries
queries <- series |>
base::lapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
bls_query(series = BLS$cpi, start_year=2014, end_year=2013)
series |> base::lapply(function(x) bslR4::bls_query(series=x, start_year, end_year, BLS$url))
series |> base::sapply(function(x) bslR4::bls_query(series=x, start_year, end_year, BLS$url))
series |> base::sapply(function(x) bls4R::bls_query(series=x, start_year, end_year, BLS$url))
# Build API queries
queries <- series |>
base::lapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
# Build API queries
queries <- series |>
base::sapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
series |> base::sapply(function(x) bls4R::bls_query(series=x, start_year, end_year, BLS$url))
url_ = BLS$url
series |> base::sapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
queries <- series |> base::sapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
queries <- series |> base::lapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
# Build API queries
queries <- series |>
base::lapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
# Send request for each series
requests <- queries |>
base::lapply(function(query) bls_request(query=query))
# Extract data for each request
data <- requests |>
base::lapply(function(request) bls4R::bls_extract(request=request))
# Number of series to loop through
n <- base::length(series)
data[1]
data[[1]]
data[1]
data[[1]]
series[1]
# Append series id to each data.table
base::sequence(n) |>
base::lapply(function(i) data[[i]][series_id := series[i]])
# Append series id to each data.table
base::sequence(n) |>
base::lapply(function(i) data[[i]][,series_id := series[i]])
View(data)
# Append series id to each data.table
data <- base::sequence(n) |>
base::lapply(function(i) data[[i]][,series_id := series[i]])
View(data)
# Bind data.table into a single data.table
data <- data |> data.table::rbindlist()
# Bind data.table into a single data.table
data <- data |> data.table::rbindlist()
devtools::document()
devtools::build()
devtools::load_all()
data <- bls4R::bls_requests(series=BLS$cpi,start_year=2014,end_year=2023)
# Number of series to loop through
n <- base::length(series)
series <- c(BLS$cpi)
# Number of series to loop through
n <- base::length(series)
start_year <- 2014
end_year <- 2023
url_ <- BLS$url
# Build API queries
queries <- series |>
base::lapply(function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year, url_=url_))
# Send request for each series
requests <- queries |>
base::lapply(function(query) bls4R::bls_request(query=query))
# Extract data for each request
data <- base::sequence(n) |>
base::lapply(function(i) {
data_ <- bls4R::bls_extract(request=requests[[i]])
data_[, series_id := series[i]]
})
# Bind data.table into a single data.table
data <- data |> data.table::rbindlist()
# Return all series
return(data)
devtools::document()
devtools::build()
devtools::load_all()
bls4R::bls_requests(series=BLS$cpi, start_year=2014, end_year=2023)
devtools::build()
devtools::load_all()
bls_requests(series=BLS$cpi, start_year = 2014, end_year = 2023)
# Initialize BLS object
fpath <- base::file.path("data-raw", "BLS_SERIES.csv")
# Read data
BLS_SERIES <- data.table::fread(fpath)
# Save object
usethis::use_data(BLS_SERIES, overwrite = TRUE)
# Initialize BLS object
BLS <- list()
# Add BLS API url
BLS$url <- "https://api.bls.gov/publicAPI/v2/timeseries/data/"
# Add CPI: Urban Consumer Series ID
BLS$cpi <- "CUUR0000SA0"
# Add ECI Series ID
BLS$eci <- "CIS1010000000000I"
# Save object
usethis::use_data(BLS, overwrite = TRUE)
devtools::document()
devtools::build()
devtools::load_all()
bls4R::BLS_SERIES
library(bls4R)
series <- BLS_SERIES
series |> typeof()
series <- BLS_SERIES[item_name=="All Items", item_code]
# View some options for series
BLS_SERIES |>
head()
# View some options for series
BLS_SERIES |>
head()
series <- BLS_SERIES[item_name=="All Items", item_code]
start_year <- 2014
end_year <- 2023
bls_data <- bls4R::bls_requests(series=series,start_year=start_year,end_year=end_year)
# View some options for series
BLS_SERIES |>
head(10)
# View some options for series
BLS_SERIES[1:10,]
# View some options for series
BLS_SERIES[1:10,item_name]
series <- BLS_SERIES[1:10, item_name]
start_year <- 2014
end_year <- 2023
bls_data <- bls4R::bls_requests(series=series,start_year=start_year,end_year=end_year)
base::lapply(series, function(x) bls4R::bls_query(series=x, start_year=start_year, end_year=end_year))
series <- BLS_SERIES[1:10, item_code]
start_year <- 2014
end_year <- 2023
bls_data <- bls4R::bls_requests(series=series,start_year=start_year,end_year=end_year)
View(bls_data)
# View some options for series
BLS_SERIES |>
View()
series <- BLS_SERIES[item_name=="Legal services"]
series <- BLS_SERIES[item_name=="Legal services", item_code]
start_year <- 2014
end_year <- 2023
# Build query
query <- bls4R::bls_query(series=series)
# Build query
query <- bls4R::bls_query(series=series, start_year=start_year, end_year=end_year)
# Send request
request <- bls4R::bls_request(query=query)
# Extract data
request <- bls4R::bls_extract(request=request)
# Extract data
bls_data <- bls4R::bls_extract(request=request)
# Build query
query <- bls4R::bls_query(series=series, start_year=start_year, end_year=end_year)
# Send request
request <- bls4R::bls_request(query=query)
# Extract data
bls_data <- bls4R::bls_extract(request=request)
# Append series id column
bls_data[, series_id := series]
View(bls_data)
# Or, this does the same thing but can take a list of series
bls_data <- bls4R::bls_requests(series=series,start_year=start_year,end_year=end_year)
pkgdown:::build_site_external()
devtools::install_github("GuyWithGlasses00/bls4R")
